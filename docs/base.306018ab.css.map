{"version":3,"sources":["cmun-sans.css","cmun-serif.css","cmun-serif-slanted.css","cmun-typewriter.css","cmun-typewriter-slanted.css","cmu.css","base.css"],"names":[],"mappings":"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","file":"base.306018ab.css","sourceRoot":"../src","sourcesContent":["@font-face {\n\tfont-family: 'Computer Modern Sans';\n\tsrc: url('cmunss.woff') format('woff');\n\tfont-weight: normal;\n\tfont-style: normal;\n}\n\n\n@font-face {\n\tfont-family: 'Computer Modern Sans';\n\tsrc: url('cmunsx.woff') format('woff');\n\tfont-weight: bold;\n\tfont-style: normal;\n}\n\n\n@font-face {\n\tfont-family: 'Computer Modern Sans';\n\tsrc: url('cmunsi.woff') format('woff');\n\tfont-weight: normal;\n\tfont-style: italic;\n}\n\n\n@font-face {\n\tfont-family: 'Computer Modern Sans';\n\tsrc: url('cmunso.woff') format('woff');\n\tfont-weight: bold;\n\tfont-style: oblique;\n}\n","@font-face {\n\tfont-family: 'Computer Modern Serif';\n\tsrc: url('cmunrm.woff') format('woff');\n\tfont-weight: normal;\n\tfont-style: normal;\n}\n\n\n@font-face {\n\tfont-family: 'Computer Modern Serif';\n\tsrc: url('cmunbx.woff') format('woff');\n\tfont-weight: bold;\n\tfont-style: normal;\n}\n\n\n@font-face {\n\tfont-family: 'Computer Modern Serif';\n\tsrc: url('cmunti.woff') format('woff');\n\tfont-weight: normal;\n\tfont-style: italic;\n}\n\n\n@font-face {\n\tfont-family: 'Computer Modern Serif';\n\tsrc: url('cmunbi.woff') format('woff');\n\tfont-weight: bold;\n\tfont-style: italic;\n}\n","@font-face {\n\tfont-family: 'Computer Modern Serif Slanted';\n\tsrc: url('cmunsl.woff') format('woff');\n\tfont-weight: normal;\n\tfont-style: normal;\n}\n\n\n@font-face {\n\tfont-family: 'Computer Modern Serif Slanted';\n\tsrc: url('cmunbl.woff') format('woff');\n\tfont-weight: bold;\n\tfont-style: normal;\n}\n","@font-face {\n\tfont-family: 'Computer Modern Typewriter';\n\tsrc: url('cmuntt.woff') format('woff');\n\tfont-weight: normal;\n\tfont-style: normal;\n}\n\n\n@font-face {\n\tfont-family: 'Computer Modern Typewriter';\n\tsrc: url('cmuntb.woff') format('woff');\n\tfont-weight: bold;\n\tfont-style: normal;\n}\n\n\n@font-face {\n\tfont-family: 'Computer Modern Typewriter';\n\tsrc: url('cmunit.woff') format('woff');\n\tfont-weight: normal;\n\tfont-style: italic;\n}\n\n\n@font-face {\n\tfont-family: 'Computer Modern Typewriter';\n\tsrc: url('cmuntx.woff') format('woff');\n\tfont-weight: bold;\n\tfont-style: italic;\n}\n","@font-face {\n\tfont-family: 'Computer Modern Typewriter Slanted';\n\tsrc: url('cmunst.woff') format('woff');\n\tfont-weight: normal;\n\tfont-style: oblique;\n}\n","/* @import url(\"./Bright/cmun-bright.css\"); */\n/* @import url(\"./Bright Semibold/cmun-bright-semibold.css\"); */\n/* @import url(\"./Classical Serif Italic/cmun-classical-serif-italic.css\"); */\n/* @import url(\"./Concrete/cmun-concrete.css\"); */\n@import url(\"./Sans/cmun-sans.css\");\n/* @import url(\"./Sans Demi-Condensed/cmun-sans-demicondensed.css\"); */\n@import url(\"./Serif/cmun-serif.css\");\n@import url(\"./Serif Slanted/cmun-serif-slanted.css\");\n@import url(\"./Typewriter/cmun-typewriter.css\");\n@import url(\"./Typewriter Slanted/cmun-typewriter-slanted.css\");\n/* @import url(\"./Typewriter Light/cmun-typewriter-light.css\"); */\n/* @import url(\"./Typewriter Variable/cmun-typewriter-variable.css\"); */\n/* @import url(\"./Upright Italic/cmun-upright-italic.css\"); */\n","@import url(\"~/../src/theme/latex/fonts/cmu.css\");\n\n/*******************/\n/* default lengths */\n/*******************/\n\n:root, :host {\n    --size: 10pt;\n    --line-height: 1.2;\n\n    /* --linewidth makes no sense here; it is the width of the line in the current environment */\n\n    --paperwidth: 100%;         /* paper is the browser window */\n\n    /* TeX's even/oddsidemargin are not available in CSS, the HtmlGenerator translates the relevant lengths\n     * to marginleftwidth, marginrightwidth, and textwidth, as well as marginparwidth - all relative to the paper.\n     * So if a fixed width page is desired, simply set --paperwidth to an absolute value.\n     */\n\n    --parindent: 1.5em;\n    --parskip: 0px;             /* needs to be a length, otherwise calc(2px + var(--parskip)) will return 0 */\n\n    --smallskipamount: 0.3rem;\n    --medskipamount: 0.6rem;\n    --bigskipamount: 1.2rem;\n\n    --listparindent: 0px;\n    --itemindent: 0px;\n\n    --leftmargini: 2.5em;\n    --leftmarginii: 2.2em;\n    --leftmarginiii: 1.87em;\n    --leftmarginiv: 1.7em;\n    --leftmarginv: 1em;\n    --leftmarginvi: 1em;\n\n    --leftmargin: var(--leftmargini);\n\n    --labelsep: 0.5rem;\n\n    --fboxrule: 0.4pt;\n    --fboxsep: 3pt;\n\n    /* multicols */\n    --columnwidth: ;\n\n    --columnsep: 35pt;\n    --columnseprule: 0pt;\n    --columnseprulecolor: black;\n\n    --multicolsep: 12pt;\n}\n\n\n[latex-root] .twocolumn {\n    --parindent: 1em;\n\n    --marginparsep: 1rem;\n\n    --leftmargini: 2em;\n    --leftmarginv: 0.5em;\n    --leftmarginvi: 0.5em;\n}\n\n\n[latex-root] .list {\n    --topsep: 0.8rem;\n    --parsep: 0.4rem;\n    --itemsep: 0.4rem;\n    --leftmargin: var(--leftmargini);\n}\n\n[latex-root] .list .list {\n    --topsep: 0.4rem;\n    --parsep: 0.2rem;\n    --itemsep: var(--parsep);\n    --leftmargin: var(--leftmarginii);\n}\n\n[latex-root] .list .list .list {\n    --topsep: 0.2rem;\n    --parsep: 0;\n    --itemsep: var(--topsep);\n    --leftmargin: var(--leftmarginiii);\n}\n\n[latex-root] .list .list .list .list {\n    --topsep: 0;\n    --leftmargin: var(--leftmarginiv);\n}\n\n[latex-root] .list .list .list .list .list {\n    --leftmargin: var(--leftmarginv);\n}\n\n[latex-root] .list .list .list .list .list .list {\n    --leftmargin: var(--leftmarginvi);\n}\n\n\n\n/***************/\n/* page layout */\n/***************/\n\n/* .page is the element when used as a web component */\n[latex-root] .page {\n    display: grid;\n\n    grid-template-columns: [margin-left] var(--marginleftwidth) [body] var(--textwidth) [margin-right] var(--marginrightwidth);\n    grid-template-rows: auto;\n\n    margin: 0;\n    padding: 0;\n\n    max-width: var(--paperwidth);   /* elements wider than this overflow, but don't increase bodywidth */\n    min-width: var(--paperwidth);\n}\n\n\n/* LaTeX page body */\n[latex-root].body {\n    grid-column: body;\n    grid-row: 1;\n}\n\n/* LaTeX page margins */\n[latex-root] .margin-left {\n    grid-column: margin-left;\n    grid-row: 1;\n    justify-self: end;\n\n    display: flex;\n}\n\n[latex-root] .margin-right {\n    grid-column: margin-right;\n    grid-row: 1;\n    justify-self: start;\n\n    display: flex;\n}\n\n[latex-root] .marginpar {\n    width: var(--marginparwidth);           /* ideally in percent relative to margin */\n    min-width: var(--marginparwidth);       /* min-width if in grid/flex container, to force this width */\n\n    margin-left: var(--marginparsep);\n    margin-right: var(--marginparsep);\n}\n\n[latex-root] .marginpar > * {\n    padding-bottom: var(--marginparpush);   /* use padding, which is included in offsetHeight, margin is not */\n}\n\n\n/* columns */\n[latex-root] .onecolumn {\n    column-count: 1;\n}\n\n[latex-root] .twocolumn {\n    column-count: 2;\n}\n\n[latex-root]  .multicols {\n    margin-top: var(--multicolsep);\n    margin-bottom: var(--multicolsep);\n\n    column-gap: var(--columnsep);\n    column-rule: var(--columnseprule) solid var(--columnseprulecolor);\n    column-fill: balance;\n}\n\n[latex-root]  .span-cols {\n    column-span: all;\n}\n\n\n/*********/\n/* fonts */\n/*********/\n\n[latex-root] .page {\n    font-family: \"Computer Modern Serif\", serif;\n    font-size: var(--size);\n\n    text-align: justify;\n    line-height: var(--line-height);\n    hyphens: manual;\n}\n\n.katex {\n    font-size: 1em !important;\n}\n\n.katex,\n.katex .mainrm,\n.katex .mathit,\n.katex .mathbf {\n    font-family: \"Computer Modern Serif\" !important;  /* for KaTeX_Main */\n}\n\n.katex .mathdefault,\n.katex .boldsymbol {\n    font-family: \"Computer Modern Serif\" !important;  /* for KaTeX_Math */\n}\n\n.katex .mathsf,\n.katex .textsf,\n.katex .mathboldsf,\n.katex .textboldsf,\n.katex .mathitsf, .katex .textitsf {\n    font-family: \"Computer Modern Sans\" !important;  /* for KaTeX_SansSerif */\n}\n\n\n\n/* family */\n[latex-root]  .rm {\n    font-family: \"Computer Modern Serif\", serif;\n    font-variant-ligatures: normal;\n}\n[latex-root]  .sf {\n    font-family: \"Computer Modern Sans\", sans-serif;\n    font-variant-ligatures: normal;\n}\n[latex-root]  .tt {\n    font-family: \"Computer Modern Typewriter\", monospace;\n    font-variant-ligatures: none;\n}\n\n/* weight */\n[latex-root]  .md {\n    font-weight: normal;\n}\n\n[latex-root]  .bf {\n    font-weight: bold;\n}\n\n/* shape - LaTeX doesn't support slanted small-caps by default */\n[latex-root]  .up {\n    font-family: \"Computer Modern Serif\", serif;\n    font-style: normal;\n    font-variant-caps: normal;\n}\n\n[latex-root]  .it {\n    font-style: italic;\n    font-variant-caps: normal;\n}\n\n[latex-root]  .sl {\n    font-family: \"Computer Modern Serif Slanted\";\n    font-style: oblique;\n    font-variant-caps: normal;\n}\n\n[latex-root]  .sf.sl {\n    font-family: \"Computer Modern Sans\", sans-serif;\n    font-style: oblique;\n    font-variant-caps: normal;\n}\n\n[latex-root]  .tt.sl {\n    font-family: \"Computer Modern Typewriter Slanted\", monospace;\n    font-style: oblique;\n    font-variant-caps: normal;\n}\n\n[latex-root]  .sc {\n    font-family: \"Computer Modern Serif\", serif;\n    font-style: normal;\n    font-variant-caps: small-caps;\n}\n\n\n\n\n/* size */\n\n[latex-root]  .tiny {\n    font-size: .5rem;\n}\n\n[latex-root] .scriptsize {\n    font-size: .7rem;\n}\n\n[latex-root] .footnotesize {\n    font-size: .82rem;\n}\n\n[latex-root]  .small {\n    font-size: .91rem;\n}\n\n[latex-root]  .normalsize {\n    font-size: 1rem;\n}\n\n[latex-root]  .large {\n    font-size: 1.2rem;\n}\n\n[latex-root]  .Large {\n    font-size: 1.4rem;\n}\n\n[latex-root]  .LARGE {\n    font-size: 1.7rem;\n}\n\n[latex-root]  .huge {\n    font-size: 2rem;\n}\n\n[latex-root]  .Huge {\n    font-size: 2.5rem;\n}\n\n\n\n\n/**************/\n/* sectioning */\n/**************/\n\n[latex-root]  h1, [latex-root]  h2, [latex-root]  h3, [latex-root] h4 {\n    /* \\normalfont */\n    font-family: \"Computer Modern Serif\", serif;\n    font-style: normal;\n    font-variant-caps: normal;\n\n    text-align: left;\n}\n\n\n[latex-root]  .titlepage {\n    height: 100vh;\n    min-height: 20rem;\n}\n\n[latex-root]  .title {\n    font-size: 1.7rem;  /* LARGE */\n}\n\n[latex-root]  .author, [latex-root]  .date {\n    font-size: 1.2rem;  /* large */\n}\n\n\n\n/*************/\n/* alignment */\n/*************/\n\n[latex-root]  .centering, [latex-root]  .list.center {\n    text-indent: 0;\n    text-align: center;\n}\n\n[latex-root]  .raggedright, [latex-root]  .list.flushleft {\n    text-indent: 0;\n    text-align: left;\n}\n\n[latex-root]  .raggedleft, [latex-root]  .list.flushright {\n    text-indent: 0;\n    text-align: right;\n}\n\n\n/* alignment environments are lists (trivlist), so margin has to be removed */\n\n[latex-root]  .list.center, [latex-root]  .list.flushleft, [latex-root]  .list.flushright {\n    margin-left: 0 !important;\n}\n\n/* a list on its own justifies */\n[latex-root]  .list {\n    text-align: justify;\n}\n\n\n\n/*********/\n/* boxes */\n/*********/\n\n\n[latex-root]  .hbox {\n    display: inline-block;\n    white-space: nowrap;\n    text-indent: 0;\n}\n\n[latex-root]  .phantom {\n    visibility: hidden;\n}\n\n\n[latex-root]  .llap {\n    display: inline-flex;\n    flex-direction: column;\n    width: 0;\n    align-items: flex-end;\n}\n\n[latex-root]  .clap {\n    display: inline-flex;\n    flex-direction: column;\n    width: 0;\n    align-items: center;\n}\n\n[latex-root]  .rlap {\n    display: inline-block;\n    width: 0;\n}\n\n\n[latex-root]  .stretch {\n    display: inline-flex;\n    flex-direction: row;\n\n    justify-content: stretch;\n    align-items: stretch;\n}\n\n[latex-root]  .smash {\n    display: inline-flex;\n    flex-direction: row;\n    height: 0px;\n    align-items: flex-end;\n}\n\n\n/* a class to align text to the baseline, and a class to locate the baseline */\n\n[latex-root]  .align-baseline {\n    line-height: 0;\n}\n\n[latex-root]  .align-baseline::after {\n    content: '';\n    display: inline-block;\n}\n\n[latex-root]  .mpbaseline {\n    line-height: 0;\n    width: 0;\n    height: 0;\n    display: inline-block;\n}\n\n/* parbox/minipage */\n\n[latex-root]  .parbox {\n    display: inline-block;\n    text-indent: 0;\n}\n\n/* pos: t (top) */\n[latex-root]  .p-t {\n    display: inline-flex;\n}\n\n/* pos: c (center) */\n[latex-root]  .p-c {\n    vertical-align: middle;\n}\n\n/* pos: b (bottom) */\n[latex-root]  .p-b {\n    /* default */\n    vertical-align: baseline;       /* TODO: what if llap inside?? */\n}\n\n\n\n/* if we want a fixed height *and* bottom alignment */\n[latex-root]  .pbh.p-b {\n    vertical-align: text-bottom;\n}\n\n\n/* the following are only possible if height was given, too */\n\n[latex-root]  .p-t.p-ct {\n    vertical-align: baseline;\n}\n\n[latex-root]  .p-t.p-cc {\n    vertical-align: text-top;\n    align-items: center;\n}\n\n/* pos: top, inner-pos: bottom */\n[latex-root]  .p-t.p-cb {\n    vertical-align: text-top;\n    display: inline-flex;\n    align-items: flex-end;\n}\n\n/* pos and inner-pos: center */\n[latex-root]  .p-c.p-cc {\n    display: inline-flex;\n    align-items: center;\n}\n\n[latex-root]  .p-c.p-cb {\n    display: inline-flex;\n    align-items: flex-end;\n}\n\n\n[latex-root]  .p-b.p-ct {\n    display: inline-flex;\n    align-items: flex-start;\n}\n\n[latex-root]  .p-b.p-cc {\n    display: inline-flex;\n    align-items: center;\n}\n\n/* pos: bottom, inner-pos: bottom */\n[latex-root]  .p-b.p-cb {\n    vertical-align: baseline;\n    display: inline-flex;\n    align-items: flex-end;\n}\n\n[latex-root]  .p-b.p-cb::before {\n    /* move the baseline to the bottom of a flex item */\n    content: \"x\";\n    display: inline-block;\n    width: 0;\n    visibility: hidden;\n}\n\n\n\n\n[latex-root]  .underline {\n    border-bottom: 0.4pt solid;\n    line-height: 1;\n}\n\n\n[latex-root]  .frame {\n    padding: var(--fboxsep);\n    border: var(--fboxrule) solid;\n    margin-top: 2px;\n    margin-bottom: 2px;\n}\n\n\n/****************/\n/* environments */\n/****************/\n\n[latex-root]  .pframe {\n    border-style: solid;\n}\n\n[latex-root]  .picture {\n    display: inline-block;  /* so that it can be given a fixed size */\n    position: relative;\n    vertical-align: bottom; /* needed for \\put */\n    text-indent: 0;         /* pictures in a paragraph still should not have indentation */\n    /* width: 0; */\n}\n\n/* the coordinate system of the picture */\n[latex-root]  .picture-canvas {\n    display: flex;\n    align-items: flex-end;\n    position: absolute;\n    left: 0;\n    bottom: 0;\n}\n\n/* cannot do this, it pushes the whole picture up by the depth of the font :(\n[latex-root]  .picture-canvas > .hbox::after {\n    content: \"\";\n    display: inline;\n}\n*/\n\n\n/* objects in a picture */\n[latex-root]  .put-obj {\n    display: block;\n    position: relative;\n    line-height: 0;\n    /* width: 0; */         /* picture objects only have a height, but we cannot set the\n                               width to 0 directly because it breaks vertical baseline alignment of text */\n}\n\n/* make text align on the baseline in \\put - needs line-height: 0 in .put-obj! */\n[latex-root]  .put-obj:after {\n    content: '';\n    display: inline-block;\n}\n\n\n[latex-root]  .strut {\n    display: block;\n}\n\n[latex-root]  .picture-object {\n    position: absolute;\n    display: flex;          /* to align text and boxes at the bottom */\n                            /* line-height: 0px; works for boxes, but breaks text */\n}\n\n\n/**********/\n/* macros */\n/**********/\n\n[latex-root]  code {\n    white-space: pre;\n}\n\n\n/**********/\n/* spaces */\n/**********/\n\n/* reset */\n[latex-root]  p, [latex-root]  ul, [latex-root]  ol, [latex-root]  dl, [latex-root]  div {\n    margin: 0;\n    padding: 0;\n}\n\n[latex-root]  p {\n    margin-top: var(--parskip);\n    text-indent: var(--parindent);\n}\n\n\nh1 + p, h1 + * p:first-child,\nh2 + p, h2 + * p:first-child,\nh3 + p, h3 + * p:first-child,\nh4 + p, h4 + * p:first-child,\n[latex-root]  .noindent,  [latex-root]  .continue {\n    text-indent: 0;\n}\n\n\n\n\n/* predefined horizontal spaces */\n[latex-root]  .negthinspace {\n    margin-left: -0.16666667em;\n}\n\n\n/* vertical space - insert the actual space (negative or positive) with margin-bottom */\n[latex-root]  .vspace {\n    display: block;\n}\n\n/* vertical space that forces a linebreak */\n[latex-root]  .breakspace {\n    display: table;\n}\n\n/* inline vertical space - this cannot be negative */\n[latex-root]  .vspace-inline {\n    display: inline-block;\n    height: calc(1em * var(--line-height));     /* full maximum height, including the leading: line-height * font-size */\n    vertical-align: top;                        /* if bottom is used, space could be inserted above this line of text */\n}\n\n\n/* predefined vertical spaces */\n[latex-root]  .smallskip {\n    margin-bottom: var(--smallskipamount);\n}\n\n[latex-root]  .medskip {\n    margin-bottom: var(--medskipamount);\n}\n\n[latex-root]  .bigskip {\n    margin-bottom: var(--bigskipamount);\n}\n\n\n/****************/\n/* environments */\n/****************/\n\n\n/* lists */\n\n[latex-root]  .list {\n    margin: calc(var(--topsep) + var(--parskip)) 0;\n    margin-left: var(--leftmargin);\n}\n\n[latex-root]  .list p:first-of-type {\n    text-indent: var(--itemindent);\n}\n\n[latex-root]  .list p + p {\n    margin-top: var(--parsep);\n    text-indent: var(--listparindent);\n}\n\n[latex-root]  .list li + li, [latex-root]  .list dd + dt {\n    margin-top: calc(var(--itemsep) + var(--parsep));\n}\n\n\n/* labels */\n\n[latex-root]  li {\n    list-style: none;\n}\n\n/* label should be next to the item, so the first element after the label needs to be inline */\n[latex-root]  .itemlabel + * {\n    display: inline;\n}\n\n[latex-root]  .itemlabel > * {\n    position: relative;\n    right: var(--labelsep);\n}\n\n\n\n\n/* description */\n\n[latex-root]  dd, [latex-root]  dd > p:first-child {\n    display: inline;\n}\n\n/* start a new line after dd and before dt */\n[latex-root]  dd::after {\n    content: \"\";\n    display: block;\n}\n\n\n[latex-root]  dt {\n    display: inline-block;\n    font-weight: bold;\n}\n\n[latex-root]  .list dt {\n    margin-left: calc(-1 * var(--leftmargin));\n}\n\n[latex-root]  dd {\n    margin-left: var(--labelsep);\n}\n\n\n\n/* quote, quotation, verse */\n\n[latex-root]  .quote, .quotation, .verse {\n    margin-left: var(--leftmargin);\n    margin-right: var(--leftmargin);\n}\n\n[latex-root]  .quotation {\n    --parsep: 0px;\n    --itemindent: 1.5em;\n    --listparindent: var(--itemindent);\n}\n\n[latex-root]  .verse {\n    text-align: left;\n\n    margin-left: calc(1.5em + var(--leftmargin));\n    --itemindent: -1.5em;\n    --listparindent: var(--itemindent);\n}\n\n\n\n\n\n/* the TeX and LaTeX logos */\n\n[latex-root]  span.tex, span.latex {\n    text-transform: uppercase;\n}\n\n[latex-root]  span.latex > .a {\n    font-size: 0.8em;\n    vertical-align: 0.2em;\n    margin-left:  -0.45em;\n    margin-right: -0.15em;\n}\n\n[latex-root] span.tex > .e, [latex-root]  span.latex > .e {\n    margin-left: -0.2em;\n    margin-right: -0.2em;\n    position: relative;\n    top: 0.45ex;\n}\n"]}